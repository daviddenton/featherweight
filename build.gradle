buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlin_version}"
    }
}

repositories {
    mavenCentral()
    jcenter()
}

apply plugin: "kotlin"
apply plugin: "kotlin-kapt"

test {
    useJUnitPlatform()
}

compileKotlin.kotlinOptions.jvmTarget = "11"
compileTestKotlin.kotlinOptions.jvmTarget = "11"

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

dependencies {
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version")
    implementation(platform("org.http4k:http4k-bom:$http4k_version"))
    implementation(platform("org.http4k:http4k-connect-bom:$http4k_connect_version"))
    implementation("org.http4k:http4k-core")
    implementation("org.http4k:http4k-serverless-lambda")
    implementation("org.http4k:http4k-cloudnative")
    implementation("org.http4k:http4k-format-moshi")
    implementation("org.http4k:http4k-connect-amazon-kms")
    implementation("org.http4k:http4k-connect-amazon-lambda")
    implementation("org.http4k:http4k-connect-amazon-secretsmanager")
    implementation("org.http4k:http4k-connect-amazon-sqs")
    implementation("org.http4k:http4k-connect-amazon-systemsmanager")
    implementation("org.slf4j:slf4j-nop:1.7.30")

    implementation("se.ansman.kotshi:api:$kotshi_version")
    kapt("se.ansman.kotshi:compiler:$kotshi_version")

    testImplementation(platform("org.junit:junit-bom:$junit_version"))
    testImplementation("org.http4k:http4k-connect-amazon-kms-fake")
    testImplementation("org.http4k:http4k-connect-amazon-lambda-fake")
    testImplementation("org.http4k:http4k-connect-amazon-secretsmanager-fake")
    testImplementation("org.http4k:http4k-connect-amazon-sqs-fake")
    testImplementation("org.http4k:http4k-connect-amazon-systemsmanager-fake")

    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testImplementation("org.junit.jupiter:junit-jupiter-engine")
}

configurations {
    runtime.exclude group: "org.jetbrains.kotlin", module: "kotlin-reflect"
}

task buildZip(type: Zip) {
    from compileKotlin
    from processResources
    into('lib') {
        from configurations.runtimeClasspath
    }
}

tasks.create("weighDependencies") {
    doLast {
        allprojects
                .forEach {
                    println it.name.toUpperCase()
                    it.configurations
                            .runtimeClasspath
                            .resolvedConfiguration
                            .firstLevelModuleDependencies.forEach {

                        def sorted = it.allModuleArtifacts.toSorted()
                        println "  " + it.name + " = " + sorted.sum { it.file.length() }
                        sorted.forEach { println("    " + it.file.name + " = " + it.file.length()) }
                    }
                }
    }
}
